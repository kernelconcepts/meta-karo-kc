From 1234e1634e151759a4a73ed6f9229c97c40861da Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lothar=20Wa=C3=9Fmann?= <LW@KARO-electronics.de>
Date: Mon, 27 Jan 2020 13:16:35 +0100
Subject: [PATCH 35/35] net: phy: ksz9031: add workaround for 1000baseT chip
 erratum

---
 drivers/net/phy/micrel_ksz90x1.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/drivers/net/phy/micrel_ksz90x1.c b/drivers/net/phy/micrel_ksz90x1.c
index 6b411d6..4400a67 100644
--- a/drivers/net/phy/micrel_ksz90x1.c
+++ b/drivers/net/phy/micrel_ksz90x1.c
@@ -346,6 +346,7 @@ static int ksz9031_phy_extwrite(struct phy_device *phydev, int addr,
 static int ksz9031_config(struct phy_device *phydev)
 {
 	int ret;
+	unsigned int features = phydev->drv->features;
 
 	ret = ksz9031_of_config(phydev);
 	if (ret)
@@ -356,11 +357,9 @@ static int ksz9031_config(struct phy_device *phydev)
 
 	/* add an option to disable the gigabit feature of this PHY */
 	if (env_get("disable_giga")) {
-		unsigned features;
 		unsigned bmcr;
 
 		/* disable speed 1000 in features supported by the PHY */
-		features = phydev->drv->features;
 		features &= ~(SUPPORTED_1000baseT_Half |
 				SUPPORTED_1000baseT_Full);
 		phydev->advertising = phydev->supported = features;
@@ -378,6 +377,18 @@ static int ksz9031_config(struct phy_device *phydev)
 		genphy_restart_aneg(phydev);
 
 		return 0;
+	} else {
+		/* force master mode for 1000BaseT due to chip errata */
+		u16 ctrl1000 = 0;
+		const u16 master = CTRL1000_PREFER_MASTER |
+			CTRL1000_CONFIG_MASTER | CTRL1000_MANUAL_CONFIG;
+
+		if (features & SUPPORTED_1000baseT_Half)
+			ctrl1000 |= ADVERTISE_1000HALF | master;
+		if (features & SUPPORTED_1000baseT_Full)
+			ctrl1000 |= ADVERTISE_1000FULL | master;
+
+		phy_write(phydev, MDIO_DEVAD_NONE, MII_CTRL1000, ctrl1000);
 	}
 
 	return genphy_config(phydev);
-- 
2.7.4

