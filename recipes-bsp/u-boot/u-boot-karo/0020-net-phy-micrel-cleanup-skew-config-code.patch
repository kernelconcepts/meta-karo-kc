From cb1a087a675a9e96dd8d6f6d274638c55385cf80 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lothar=20Wa=C3=9Fmann?= <LW@KARO-electronics.de>
Date: Thu, 16 Jan 2020 12:20:26 +0100
Subject: [PATCH 20/35] net: phy: micrel: cleanup skew config code

Convert an array variable of which only one index is used at a time
into a local integer variable inside the loop where it is used.
---
 drivers/net/phy/micrel_ksz90x1.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/net/phy/micrel_ksz90x1.c b/drivers/net/phy/micrel_ksz90x1.c
index b350a61..df58562 100644
--- a/drivers/net/phy/micrel_ksz90x1.c
+++ b/drivers/net/phy/micrel_ksz90x1.c
@@ -112,7 +112,6 @@ static int ksz90x1_of_config_group(struct phy_device *phydev,
 	struct udevice *dev = phydev->dev;
 	struct phy_driver *drv = phydev->drv;
 	const int ps_to_regval = 60;
-	int val[4];
 	int i, changed = 0, offset, max;
 	u16 regval = 0;
 
@@ -120,19 +119,20 @@ static int ksz90x1_of_config_group(struct phy_device *phydev,
 		return -EOPNOTSUPP;
 
 	for (i = 0; i < ofcfg->grpsz; i++) {
-		val[i] = dev_read_u32_default(dev, ofcfg->grp[i].name, ~0);
+		int val = dev_read_u32_default(dev, ofcfg->grp[i].name, ~0);
+
 		offset = ofcfg->grp[i].off;
-		if (val[i] == -1) {
+		if (val == -1) {
 			/* Default register value for KSZ9021 */
 			regval |= ofcfg->grp[i].dflt << offset;
 		} else {
 			changed = 1;	/* Value was changed in OF */
 			/* Calculate the register value and fix corner cases */
-			if (val[i] > ps_to_regval * 0xf) {
+			if (val > ps_to_regval * 0xf) {
 				max = (1 << ofcfg->grp[i].size) - 1;
 				regval |= max << offset;
 			} else {
-				regval |= (val[i] / ps_to_regval) << offset;
+				regval |= (val / ps_to_regval) << offset;
 			}
 		}
 	}
@@ -140,6 +140,9 @@ static int ksz90x1_of_config_group(struct phy_device *phydev,
 	if (!changed)
 		return 0;
 
+	debug("%s@%d: Writing %04x to %02x\n", __func__, __LINE__,
+	      regval, ofcfg->reg);
+
 	return drv->writeext(phydev, 0, ofcfg->devad, ofcfg->reg, regval);
 }
 
-- 
2.7.4

